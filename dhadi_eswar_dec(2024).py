# -*- coding: utf-8 -*-
"""Dhadi Eswar_Dec(2024).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jvn_QKfZEMIKyV5cz0xJcEcLXxm6rfmA

# Problem 1
In a cricket tournament, based on the outcome of a particular match a team gets following points:

wins gets 7 points

draws gets 2 points

losses gets 0 points

Team Aravali plays 8 matches in this tournament. It wins 4 matches, loses 3 matches and draws 1. What is the total number of points gained by the Team aravali ?

a) The outcome variables are defined below?
"""

points_for_win = 7
points_for_draw = 2
points_for_loss = 0

Aravali_wins = 4
Aravali_losses = 3
Aravali_draws = 1

"""b) Calculate the total points gained by Team Aravali and print."""

total_points = Aravali_wins * points_for_win + Aravali_losses * points_for_loss + Aravali_draws * points_for_draw
print("The total points gained by team Aravali is :" , total_points)

"""# Problem 2
Root of a function  f(x)  is defined as the value  x  where  f(x)=0
Consider a quadratic function  f(x)=x2+3x−4
Find the value of the function  f(x)  at points  x=7,x=−1,x=1 .
"""

def f(x):
  return x**2 + 3*x - 4

points = [7,-1,1]
for i in points:
  value = f(i)
  print(f"f({i}) ={value}")

""" a)Calculate the value of the function f(x) at x = 2.

  b) Calculate the value of the function f(x) at x = 1
"""

def f(x):
  f= x**2+ 3*x - 4
  value = f
  print(f"f({x}) = {value}")

f(2)
f(1)

"""# Problem 3
A list contains the average daily temperature(in degree Celsius) of a city over a particular week. Write a Python code to swap the highest and the lowest temperatures.

a) A list containing average daily temperature over a week
temperatures = [34, 40, 29, 33, 42, 37, 39 ]

b) The expected output



c) Store the highest temperature


d) Index of the element with the highest temperature
max_temp_index =


e) Store the lowest temperature
min_temp =

f) Index of the element with the lowest temperature
min_temp_index =
"""

temperatures = [34,40,29,33,42,37,39]
max_temp = max(temperatures)
max_temp_index = temperatures.index(max(temperatures))
min_temp = min(temperatures)
min_temp_index = temperatures.index(min(temperatures))

print(f"The maximum temperatue is {max_temp} at the index {max_temp_index}")
print(f"The minumum temperatue is {min_temp} at the index {min_temp_index}")

temperatures[max_temp_index], temperatures[min_temp_index] = temperatures[min_temp_index], temperatures[max_temp_index]
print(f"The temperatures after the swapping the maximum and minimum temperatues is: {temperatures}")

"""# Problem 4
Calculate the median price

a) Step 1 - Obtain the sorted list

b)Check if the number of elements in the list is even or odd

c)Use the corresponding formula to calculate the median and print the median

d) Check which is greater, mean or median
"""

list1 = [10,60,30,70,12,56,75]

# a) Step 1 - Obtain the sorted list
list2 = sorted(list1)
print(list2)

#b)Check if the number of elements in the list is even or odd

if len(list2)%2 == 0:
  print("The list has even number of elements")
else:
  print("The list has odd number of elements")

#c)Use the corresponding formula to calculate the median and print the median

n = len(list2)
if n % 2 == 0:
  median = (list2[n // 2 - 1] + list2[n // 2]) / 2
else:
  median = (list2[n // 2])

print(f"The median of the list is: {median}")

#d) Check which is greater, mean or median

mean = sum(list2) / n
print(f"The mean of the list is: {mean}")

if mean>median:
  print("The mean is greater than the median.")
else:
  print("The median is greater than the mean.")

"""#Problem 5
Having a nested list sometimes might be a bit problematic. An individual was asked to collect the names of companies in the technology sector.
 While creating the list, by mistake the last three companies were subsumed in a list as shown below. You are required to get rid of the nesting

a)The list of tech companies curated by the individual
tech_companies = ['Qualcomm','Google','Apple',['Nvidia','Cisco','Samsung']]
"""

tech_companies = ['Qualcomm','Google','Apple',['Nvidia','Cisco','Samsung']]

flatten_tech_companies = tech_companies[:3] + tech_companies[3]

print(f"Flattened list of tech_companies {flatten_tech_companies}")

"""#Problem 6
Another measure of average
Mode is defined as the value that appears most often in a set of data values. Mode corresponds to the most frequent value.
You are given a list of numbers and you need to calculate the mode of this list.

 A list containing average daily temperature over 10 days
temperatures = [34, 40, 29, 33, 42, 40, 39, 34, 34,33 ]
"""

temperatures = [34, 40, 29, 33, 42, 40, 39, 34, 34,33 ]

frequency = {}

for temp in temperatures:
  if temp in frequency:
    frequency[temp] += 1
  else:
    frequency[temp]=1

max_frequency = max(frequency.values())
mode = [temp for temp, freq in frequency.items() if freq == max_frequency]

print(f"The mode of the list is: {mode}")